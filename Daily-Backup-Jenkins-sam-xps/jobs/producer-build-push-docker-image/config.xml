<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.6.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.6.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
    agent {
        kubernetes {
        cloud &apos;kubernetes-cluster1&apos;
        label &apos;kubernetes-project-pod-label&apos;
        defaultContainer &apos;jnlp&apos;
        yaml &quot;&quot;&quot;
apiVersion: v1
kind: Pod
metadata:
labels:
  role: CI
spec:
  containers:
  - name: docker
    image: docker:latest
    command:
    - cat
    tty: true
    volumeMounts:
    - name: docker-socket
      mountPath: /var/run/docker.sock
  volumes:
  - name: docker-socket
    hostPath:
      path: /var/run/docker.sock
&quot;&quot;&quot;
	}
  }
  stages {
    stage(&apos;Checkout SCM&apos;) {
      steps {
        container(&apos;docker&apos;) {
            // I can use git checkout and then go the specified producer directory and build the image, but my repo is for the whole project so I used svn to clone the producer directory only.
            // checkout([$class: &apos;GitSCM&apos;, branches: [[name: &apos;*/master&apos;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &apos;GitHub&apos;, url: &apos;https://github.com/samer-habash/kubernetes-project-rabitmq&apos;]]])
            sh &quot;&quot;&quot;
                apk add --no-cache subversion
                svn co https://github.com/samer-habash/kubernetes-project-rabitmq/trunk/app/producer/ . --depth files
            &quot;&quot;&quot;
        }
      }
    }
    stage(&apos;Build Image&apos;) {
      steps {
        container(&apos;docker&apos;) {
            sh &quot;&quot;&quot;
                docker build -t jenkins-producer:latest .
                docker tag jenkins-producer:latest samer1984/jenkins-producer:latest
            &quot;&quot;&quot;
        }
      }
    }
    stage(&apos;Push Image&apos;) {
      steps {
        container(&apos;docker&apos;) {
            withDockerRegistry([ credentialsId: &quot;DockerhubCreds&quot;, url: &quot;&quot; ]) {
                sh &apos;docker push samer1984/jenkins-producer:latest&apos;
            }
        }
      }
    }
  }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>